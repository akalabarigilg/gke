name: Terraform Build GKE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_TCS }}'
        
    - name: install the gcloud cli
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GOOGLE_PROJECT }}
        service_account_key: ${{ secrets.GCP_TCS }}
        install_components: 'gke-gcloud-auth-plugin'
        export_default_credentials: true
        
    - name: check cluster exists or not
      env:
        GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
      run: |
        echo "CL_EXISTS=$(gcloud --quiet container clusters list --region europe-west2 | grep tcs-demo-gke | wc -l)" >> $GITHUB_OUTPUT
      id: checkcl

    - name: print cluster name
      if: ${{ steps.checkcl.outputs.CL_EXISTS == 1 }}
      run: |
        echo "**** Cluster Already exists ******"     
        
    # Setup Terraform CLI
    - name: Setup Terraform
      if: ${{ steps.checkcl.outputs.CL_EXISTS == 0 }}
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0 # Update to the desired Terraform version

    # Initialize Terraform
    - name: Terraform Init
      if: ${{ steps.checkcl.outputs.CL_EXISTS == 0 }}
      run: terraform init    

    # Validate the Terraform code
    - name: Terraform Validate
      if: ${{ steps.checkcl.outputs.CL_EXISTS == 0 }}
      run: terraform validate     

    # Plan Terraform changes
    - name: Terraform Plan
      if: ${{ steps.checkcl.outputs.CL_EXISTS == 0 }}
      run: terraform plan    

    # Apply Terraform changes (only on push to main)
    - name: Terraform Apply
      if: ${{ steps.checkcl.outputs.CL_EXISTS == 0 }}
      run: terraform apply -auto-approve
